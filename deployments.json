[
  {
    "content": {
      "modulesContent": {
        "$edgeAgent": {
          "properties.desired": {
            "modules": {
              "AzureSQLDatabaseEdge": {
                "env": {
                  "ACCEPT_EULA": {
                    "value": "Y"
                  },
                  "IOTEDGE_HOST": {
                    "value": "http://172.17.0.1:15580"
                  },
                  "MSSQL_AGENT_ENABLED": {
                    "value": "true"
                  },
                  "PlanId": {
                    "value": "stream-analytics-on-iot-edge"
                  },
                  "SA_PASSWORD": {
                    "value": "!Locks123"
                  },
                  "SqlConnectionString": {
                    "value": "Data Source=tcp:.,1433;Initial Catalog=MeasurementsDB;User Id=SA;Password=!Locks123;Connection Timeout=30"
                  },
                  "SqlDacpacFile": {
                    "value": "MeasurementsDB.dacpac"
                  }
                },
                "restartPolicy": "always",
                "settings": {
                  "createOptions": "{\"HostConfig\":{\"Mounts\":[{\"Target\":\"/var/opt/mssql\",\"Source\":\"sqlVolume\",\"Type\":\"volume\"}],\"PortBindings\":{\"1433/tcp\":[{\"HostPort\":\"1401\"}]}}}",
                  "image": "sqldbedge.azurecr.io/azure-sql-database-edge:1.0-preview-amd64 "
                },
                "status": "running",
                "type": "docker",
                "version": "1.0"
              },
              "RobotTelemetry": {
                "restartPolicy": "always",
                "settings": {
                  "createOptions": "",
                  "image": "sourabhacr.azurecr.io/robottelemetry:30_sec_Anomaly_data"
                },
                "status": "running",
                "type": "docker",
                "version": "1.0"
              }
            },
            "runtime": {
              "settings": {
                "minDockerVersion": "v1.25",
                "registryCredentials": {
                  "sourabhacr": {
                    "address": "sourabhacr.azurecr.io",
                    "password": "/4CBEkUNrsYQNh2BmYDY6ycgqaalfhuP",
                    "username": "sourabhacr"
                  },
                  "sqldbedge": {
                    "address": "sqldbedge.azurecr.io",
                    "password": "=D0FdVVe91vhvzfTtcrE6oCsfricKzEU",
                    "username": "sqldbedge"
                  }
                }
              },
              "type": "docker"
            },
            "schemaVersion": "1.0",
            "systemModules": {
              "edgeAgent": {
                "settings": {
                  "createOptions": "",
                  "image": "mcr.microsoft.com/azureiotedge-agent:1.0"
                },
                "type": "docker"
              },
              "edgeHub": {
                "restartPolicy": "always",
                "settings": {
                  "createOptions": "{\"HostConfig\":{\"PortBindings\":{\"443/tcp\":[{\"HostPort\":\"443\"}],\"5671/tcp\":[{\"HostPort\":\"5671\"}],\"8883/tcp\":[{\"HostPort\":\"8883\"}]}}}",
                  "image": "mcr.microsoft.com/azureiotedge-hub:1.0"
                },
                "status": "running",
                "type": "docker"
              }
            }
          }
        },
        "$edgeHub": {
          "properties.desired": {
            "routes": {
              "AmbientTelemetry": "FROM /messages/modules/RobotTelemetry/outputs/AmbientSensors INTO BrokeredEndpoint(\"/modules/AzureSQLDatabaseEdge/inputs/input2\")",
              "RobotTelemetry": "FROM /messages/modules/RobotTelemetry/outputs/RoboticSensors INTO BrokeredEndpoint(\"/modules/AzureSQLDatabaseEdge/inputs/input1\")"
            },
            "schemaVersion": "1.0",
            "storeAndForwardConfiguration": {
              "timeToLiveSecs": 7200
            }
          }
        },
        "AzureSQLDatabaseEdge": {
          "properties.desired": {
            "ASAJobEtag": "3ffd7f10-9b5c-4413-8430-ea3640947a09",
            "ASAJobInfo": "https://sourabhasdedemofuncapps.blob.core.windows.net/demofiles/ASAEdgeJobDefinition.zip?sp=rw&st=2019-07-29T21:24:05Z&se=2019-09-01T05:24:05Z&spr=https&sv=2018-03-28&sig=4%2FeWEnpSm6NASujRCRtNzb3D7%2BdLglHIHiQQKZqKfLI%3D&sr=b",
            "ASAJobResourceId": "/subscriptions/7dfac3c6-1ad0-418e-86e6-6d069ebd4d91/resourceGroups/ASAEdgeDevStorage/providers/Microsoft.StreamAnalytics/streamingjobs/XinEdgeJobTest02",
            "PublishTimestamp": "3/18/2019 9:09:22 PM",
            "SqlPackage": "https://sourabhasdedemofuncapps.blob.core.windows.net/demofiles/MeasurementsDB.zip?sp=rw&st=2019-07-29T21:32:54Z&se=2019-09-01T05:32:54Z&spr=https&sv=2018-03-28&sig=ojKifnkl3f3OV3fTIFwsDk2ElNknDCXl0zFjyBwrbqQ%3D&sr=b"
          }
        },
        "RobotTelemetry": {
          "properties.desired": {}
        }
      }
    },
    "createdTimeUtc": "2019-07-30T21:29:06.272502Z",
    "etag": "MQ==",
    "id": "sql",
    "labels": null,
    "lastUpdatedTimeUtc": "2019-07-30T21:29:06.272502Z",
    "metrics": {
      "queries": {},
      "results": {}
    },
    "priority": 0,
    "schemaVersion": "2.0",
    "systemMetrics": {
      "queries": {
        "appliedCount": "select deviceId from devices.modules where moduleId = '$edgeAgent' and configurations.[[sql]].status = 'Applied'",
        "reportedFailedCount": "select deviceId from devices.modules where moduleId = '$edgeAgent' and configurations.[[sql]].status = 'Applied' and properties.desired.$version = properties.reported.lastDesiredVersion and properties.reported.lastDesiredStatus.code != 200",
        "reportedSuccessfulCount": "select deviceId from devices.modules where moduleId = '$edgeAgent' and configurations.[[sql]].status = 'Applied' and properties.desired.$version = properties.reported.lastDesiredVersion and properties.reported.lastDesiredStatus.code = 200",
        "targetedCount": "select deviceId from devices where capabilities.iotEdge = true and tags.name = 'target'"
      },
      "results": {
        "appliedCount": 0,
        "reportedFailedCount": 0,
        "reportedSuccessfulCount": 0,
        "targetedCount": 1
      }
    },
    "targetCondition": "tags.name = 'target'"
  },
  {
    "content": {
      "modulesContent": {
        "$edgeAgent": {
          "properties.desired": {
            "modules": {},
            "runtime": {
              "settings": {
                "loggingOptions": "",
                "minDockerVersion": "v1.25",
                "registryCredentials": {}
              },
              "type": "docker"
            },
            "schemaVersion": "1.0",
            "systemModules": {
              "edgeAgent": {
                "settings": {
                  "createOptions": "{}",
                  "image": "mcr.microsoft.com/azureiotedge-agent:1.0"
                },
                "type": "docker"
              },
              "edgeHub": {
                "restartPolicy": "always",
                "settings": {
                  "createOptions": "{}",
                  "image": "mcr.microsoft.com/azureiotedge-hub:1.0"
                },
                "status": "running",
                "type": "docker"
              }
            }
          }
        },
        "$edgeHub": {
          "properties.desired": {
            "routes": {
              "route": "FROM /* INTO $upstream"
            },
            "schemaVersion": "1.0",
            "storeAndForwardConfiguration": {
              "timeToLiveSecs": 7200
            }
          }
        }
      }
    },
    "createdTimeUtc": "2019-07-30T23:25:20.0567611Z",
    "etag": "MQ==",
    "id": "no-sql",
    "labels": null,
    "lastUpdatedTimeUtc": "2019-07-30T23:25:20.0567611Z",
    "metrics": {
      "queries": {},
      "results": {}
    },
    "priority": 0,
    "schemaVersion": "2.0",
    "systemMetrics": {
      "queries": {
        "appliedCount": "select deviceId from devices.modules where moduleId = '$edgeAgent' and configurations.[[no-sql]].status = 'Applied'",
        "reportedFailedCount": "select deviceId from devices.modules where moduleId = '$edgeAgent' and configurations.[[no-sql]].status = 'Applied' and properties.desired.$version = properties.reported.lastDesiredVersion and properties.reported.lastDesiredStatus.code != 200",
        "reportedSuccessfulCount": "select deviceId from devices.modules where moduleId = '$edgeAgent' and configurations.[[no-sql]].status = 'Applied' and properties.desired.$version = properties.reported.lastDesiredVersion and properties.reported.lastDesiredStatus.code = 200",
        "targetedCount": "select deviceId from devices where capabilities.iotEdge = true and tags.name = 'target'"
      },
      "results": {
        "appliedCount": 1,
        "reportedFailedCount": 0,
        "reportedSuccessfulCount": 1,
        "targetedCount": 1
      }
    },
    "targetCondition": "tags.name = 'target'"
  }
]
